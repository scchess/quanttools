% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_dts.R
\name{plot_dts}
\alias{plot_dts}
\title{Plot data.table time series}
\description{
Plot data.table time series
}
\section{Methods}{

\describe{
 \item{\bold{\code{plot_dts}}}{
 Add data to be plotted.
 }
 \item{\bold{\code{$lines}}}{
 Add lines with following arguments:
 \tabular{ll}{
    \code{names}                        \tab vector of column names to plot                        \cr
    \code{labels}                       \tab vector of labels if different from column names       \cr
    \code{type}                         \tab vector or single value, see \link[graphics]{lines}    \cr
    \code{lty,pch,col,lwd,lend}         \tab vector or single value, see \link[graphics]{par}      \cr
    \code{bg}                           \tab vector or single value, see \link[graphics]{points}   \cr
 }
 }
 \item{\bold{\code{$events}}}{
 Add vertical events lines with following arguments:
 \tabular{ll}{
    \code{data}                         \tab two column data.table date/time index + event id      \cr
    \code{names}                        \tab only 'auto' supported                                 \cr
    \code{labels}                       \tab vector of labels                                      \cr
    \code{lty,col,lwd}                  \tab vector or single value, see \link[graphics]{par}      \cr
 }
 }
 \item{\bold{\code{$candles}}}{
 Add candles with following arguments:
    \tabular{ll}{
    \code{ohlc}                         \tab vector of open, high, low and close names             \cr
    \code{timeframe}                    \tab candle timeframe in minutes for intraday candles      \cr
    \code{position}                     \tab relative to time position only \code{'end'} supported \cr
    \code{type}                         \tab \code{'barchart'} or \code{'candlestick'}             \cr
    \code{gap}                          \tab gap between candles in fraction of \code{width}       \cr
    \code{mono}                         \tab should all candles have same color?                   \cr
    \code{col,col_up,col_flat,col_down} \tab colors                                                \cr
 }
 }
 \item{\bold{\code{$limits}}}{
 \tabular{ll}{
    \code{xlim}                         \tab vector of length two to limit plot area horizontally  \cr
    \code{ylim}                         \tab vector of length two to limit plot area vertically    \cr
    \code{tlim}                         \tab date or time vector of length two                     \cr
    \code{time_range}                   \tab intraday time limit in format 'H:M:S/H:M:S'           \cr
 }
 }
 \item{\bold{\code{$style}}}{
 Change default plot options. Available options are:
 \tabular{lll}{
    \bold{\code{grid}}\tab \tab \cr
    \code{minute}      \tab \code{list(col,lty)} \tab minute vertical gridline color and line type \cr
    \code{hour}        \tab \code{list(col,lty)} \tab hour vertical gridline color and line type   \cr
    \code{day}         \tab \code{list(col,lty)} \tab day vertical gridline color and line type    \cr
    \code{month}       \tab \code{list(col,lty)} \tab month vertical gridline color and line type  \cr
    \code{year}        \tab \code{list(col,lty)} \tab year vertical gridline color and line type   \cr
    \code{zero}        \tab \code{list(col,lty)} \tab zero horizontal gridline color and line type \cr
    \bold{\code{time}}\tab \tab \cr
    \code{grid}        \tab \code{logical}   \tab should vertical gridlines be plotted?                 \cr
    \code{resolution}  \tab \code{character} \tab auto, minute, hour, day, month, year or years         \cr
    \code{round}       \tab \code{numeric}   \tab time axis rounding in minutes                         \cr
    \code{visible}     \tab \code{logical}   \tab should time axis be plotted?                          \cr
    \bold{\code{value}}\tab \tab \cr
    \code{grid}        \tab \code{logical}  \tab should horizontal gridlines be plotted? \cr
    \code{last}        \tab \code{logical}  \tab should last values be plotted?          \cr
    \code{log}         \tab \code{logical}  \tab should y axis be in logarithmic scale?  \cr
    \code{visible}     \tab \code{logical}  \tab should y axis be plotted?               \cr
    \bold{\code{candle}}\tab \tab \cr
    \code{auto}          \tab \code{logical}                 \tab shoud candles be automatically detected and plotted?  \cr
    \code{col}           \tab \code{list(mono,up,flat,down)} \tab colors                                                \cr
    \code{gap}           \tab \code{numeric}                 \tab gap between candles in fraction of \code{width}       \cr
    \code{mono}          \tab \code{logical}                 \tab should all candles have same color?                   \cr
    \code{position}      \tab \code{character}               \tab relative to time position only \code{'end'} supported \cr
    \code{type}          \tab \code{character}               \tab \code{'candlestick'} or \code{'barchart'}             \cr
    \bold{\code{line}}\tab \tab \cr
    \code{auto}          \tab \code{logical}                 \tab shoud lines be automatically detected and plotted?    \cr
    \bold{\code{legend}}\tab \tab \cr
    \code{col}           \tab \code{list(background,frame)} \tab colors                       \cr
    \code{horizontal}    \tab \code{logical}                \tab should legend be horizontal? \cr
    \code{inset}         \tab \code{numeric}                \tab see \link[graphics]{legend}  \cr
    \code{position}      \tab \code{character}              \tab see \link[graphics]{legend}  \cr
    \code{position_event}\tab \code{character}              \tab see \link[graphics]{legend}  \cr
    \code{visible}       \tab \code{logical}                \tab should legend be plotted?    \cr
 }
 }
}
}

\examples{
\donttest{

## Data

aapl_candles = get_yahoo_data                ( 'AAPL', '2014-01-01', '2015-01-01' )
aapl_events  = get_yahoo_splits_and_dividends( 'AAPL', '2014-01-01', '2015-01-01' )

msft_candles = get_yahoo_data                ( 'MSFT', '2014-01-01', '2015-01-01' )
msft_events  = get_yahoo_splits_and_dividends( 'MSFT', '2014-01-01', '2015-01-01' )

# change system margins ( to revert use par( margins_old ) )
margins_old = par( oma = c( 5, 4, 2, 4 ) + 0.1, mar = c( 0, 0, 1, 0 ) )


## Plots

# Default:
p = plot_dts( aapl_candles[, .( date, close ) ] )
p$plot()

# User defined names and line types:
plot_dts( aapl_candles[, .( date, close ) ] )$
  lines( names = 'close', labels = 'Apple', col = 'purple', lwd = 1, lty = 2, type = 's' )$
  plot()

# With events:
plot_dts( aapl_candles[, .( date, close ) ], aapl_events[, .( date, event ) ] )$
  lines( names = 'close', labels = 'Apple', col = 'purple', lwd = 1, lty = 5, type = 'l' )$
  events( name = 'event' )$
  plot()

# With labeled events and user defined style:
plot_dts( aapl_candles[, .( date, close ) ], aapl_events[, .( date, event ) ] )$
  lines( names = 'close', labels = 'Apple', col = 'purple', lwd = 1, lty = 5, type = 'l' )$
  events( name = 'event', label = 'dividends',
    labels = format( aapl_events$value, digits = 3 ), lty = 4, col = 'red' )$
  plot()

# Multiple data sets:
plot_dts(
  aapl_candles[, .( date, aapl = close / close[1] ) ],
  msft_candles[, .( date, msft = close / close[1] ) ] )$
  lines( names = c( 'aapl', 'msft' ), labels = c( 'Apple', 'Microsoft' ), lty = c( 1, 2 ) )$
  plot()

# Candles auto detection:
plot_dts( aapl_candles[, .( date, open, high, low, close ) ] )$
  plot()

# User defined candles with user defined style:
plot_dts( aapl_candles[, .( date, o = open, h = high, l = low, c = close ) ] )$
  candles( names = c( 'o', 'h', 'l', 'c' ), type = 'candlestick', gap = 0.5 )$
  plot()

# Other methods:
plot_dts( aapl_candles[, .( date, open, high, low, close, sma = sma( close, 20 ) ) ] )$
  candles()$
  lines( names = 'sma', labels = 'SMA( close ) 20', lwd = 2 )$
  style(
    candle = list( type = 'candlestick', gap = 0.5 ),
    time = list( resolution = 'day' ) )$
  limits( tlim = '2014-07' )$
  plot()

# Grid:
prices  = plot_dts(
  aapl_candles[, .( date, Apple = close / close[1] ) ],
  msft_candles[, .( date, Microsoft = close / close[1] ) ] )
volume = plot_dts(
  aapl_candles[, .( date, Apple = volume * close / 1e9 ) ],
  msft_candles[, .( date, Microsoft = volume * close / 1e9 ) ] )$
  lines( type = 'h' )

pars = par( mfrow = c( 2, 1 ), oma = c( 5, 4, 2, 4 ) + 0.1, mar = c( 0, 0, 1, 0 ) )
prices$style( time = list( visible = F ), legend = list( col = list( text = 'black', background = rgb( 1,1,1,0.5 ) ) ) )$
  plot()
volume$style( legend = list( visible = F ), legend = list( col = list( text = 'black', background = rgb( 1,1,1,0.5 ) ) ) )$
  plot()
par( pars )

# Histogram:
volume = merge(

  aapl_candles[, .( date, aapl = volume * close / 1e9 ) ],
  msft_candles[, .( date, msft = volume * close / 1e9 ) ],
  by = 'date', all = T

)

volume[ is.na( volume ) ] = 0

# Side by side
plot_dts( volume )$
  histogram( c( 'aapl', 'msft' ), labels = c( 'Apple', 'Microsoft' ), split = T )$limits( tlim = '2014-07' )$
  plot()

# Stacked
volume_stacked = volume[][, ( 2:3 ) := tlt( .SD, cumsum ), .SDcols = 2:3 ][]

plot_dts( volume_stacked )$
  histogram( c( 'aapl', 'msft' ), labels = c( 'Apple', 'Microsoft' ), stacked = T )$limits( tlim = '2014-07' )$
  plot()

# Stacked normalized with other parameters
volume_norm = volume_stacked[][, ( 2:3 ) := .SD / .SD[[2]], .SDcols = 2:3 ][]

plot_dts( volume_norm )$
  histogram( c( 'aapl', 'msft' ), labels = c( 'Apple', 'Microsoft' ), stacked = T, gap = 0, border = 'white' )$limits( tlim = '2014-07' )$
  plot()

# theme
theme_old = par( bg = 'black', col = 'white', col.axis = 'white', col.lab = 'white', col.main = 'white' )

prices  = plot_dts(
  aapl_candles[, .( date, Apple = close / close[1] ) ],
  msft_candles[, .( date, Microsoft = close / close[1] ) ] )
volume = plot_dts(
  aapl_candles[, .( date, Apple = volume * close / 1e9 ) ],
  msft_candles[, .( date, Microsoft = volume * close / 1e9 ) ] )$
  lines( type = 'h' )

pars = par( mfrow = c( 2, 1 ), oma = c( 5, 4, 2, 4 ) + 0.1, mar = c( 0, 0, 1, 0 ) )
prices$style( time = list( visible = F ), legend = list( col = list( text = 'black', background = rgb( 1,1,1,0.5 ) ) ) )$
  plot()
volume$style( legend = list( visible = F ), legend = list( col = list( text = 'black', background = rgb( 1,1,1,0.5 ) ) ) )$
  plot()
par( pars )

par( theme_old )

# revert system margins
par( margins_old )

}

}
